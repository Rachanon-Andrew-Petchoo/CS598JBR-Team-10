{"task_id": "HumanEval/118", "completion": "    vowels = \"aeiouAEIOU\"\n    word = word[::-1]\n    for i in range(len(word)):\n        if word[i] in vowels:\n            return word[i]\n    return \"\"\n"}
{"task_id": "HumanEval/78", "completion": "    hex_num = \"0123456789ABCDEF\"\n    count = 0\n    for i in num:\n        if int(i, 16) in [2, 3, 5, 7, 11, 13]:\n            count += 1\n    return count\n"}
{"task_id": "HumanEval/129", "completion": "    # TODO: implement this\n    return []\n"}
{"task_id": "HumanEval/157", "completion": "    if a > b and a > c:\n        if a**2 == b**2 + c**2:\n            return True\n        else:\n            return False\n    elif b > a and b > c:\n        if b**2 == a**2 + c**2:\n            return True\n        else:\n            return False\n    elif c > a and c > b:\n        if c**2 == a**2 + b**2:\n            return True\n        else:\n            return False\n    else:\n        return False\n"}
{"task_id": "HumanEval/2", "completion": "    return number % 1\n"}
{"task_id": "HumanEval/64", "completion": "    return sum(1 for c in s if c in \"aeiou\")\n"}
{"task_id": "HumanEval/148", "completion": "    planets = ('Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune')\n    if planet1 not in planets or planet2 not in planets:\n        return ()\n    else:\n        planet1_index = planets.index(planet1)\n        planet2_index = planets.index(planet2)\n        if planet1_index > planet2_index:\n            return planets[planet2_index+1:planet1_index]\n        else:\n            return planets[planet1_index+1:planet2_index]\n"}
{"task_id": "HumanEval/33", "completion": "    l_copy = l.copy()\n    for i in range(len(l)):\n        if i % 3 == 0:\n            l_copy[i] = sorted(l[i:i+3])\n    return l_copy\n"}
{"task_id": "HumanEval/41", "completion": "    return n * (n - 1) // 2\n"}
{"task_id": "HumanEval/75", "completion": "    pass\n"}
{"task_id": "HumanEval/46", "completion": "    \"*** YOUR CODE HERE ***\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 2\n    elif n == 3:\n        return 0\n    else:\n        a, b, c, d = 0, 0, 2, 0\n        for i in range(4, n + 1):\n            e = a + b + c + d\n            a, b, c, d = b, c, d, e\n        return e\n"}
{"task_id": "HumanEval/138", "completion": "    if n % 2 != 0:\n        return False\n    else:\n        return True\n"}
{"task_id": "HumanEval/154", "completion": "    if len(a) != len(b):\n        return False\n    if a == b:\n        return True\n    for i in range(len(a)):\n        if a[i:] + a[:i] == b:\n            return True\n    return False\n"}
{"task_id": "HumanEval/103", "completion": "    if n > m:\n        return -1\n    else:\n        avg = (n + m) / 2\n        rounded_avg = round(avg)\n        binary_avg = bin(rounded_avg)\n        return binary_avg\n"}
{"task_id": "HumanEval/58", "completion": "    return sorted(set(l1) & set(l2))\n"}
{"task_id": "HumanEval/105", "completion": "    # your code here\n    pass\n"}
{"task_id": "HumanEval/91", "completion": "    return S.count(\"I\")\n"}
{"task_id": "HumanEval/81", "completion": "    pass\n"}
{"task_id": "HumanEval/15", "completion": "    return ' '.join(str(i) for i in range(n + 1))\n"}
{"task_id": "HumanEval/72", "completion": "    if sum(q) <= w and q == q[::-1]:\n        return True\n    else:\n        return False\n"}
